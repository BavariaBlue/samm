name: Generate Web Markdown

on:
  push:
    paths:
      - '.github/workflows/*.yml'
      - 'Website/**'
      - 'Supporting*Resources/v2.0/Datamodel/Datafiles/**/*.yml'
  pull_request:
    paths:
      - '.github/workflows/*.yml'
      - 'Website/**'
      - 'Supporting*Resources/v2.0/Datamodel/Datafiles/**/*.yml'

jobs:
  checkDuplicateRun:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@master
      with:
        github_token: ${{ github.token }}

  lintModelv20:
    runs-on: ubuntu-18.04
    needs: checkDuplicateRun
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    steps:
    - uses: actions/checkout@v2
    - name: yaml-lint
      run: |
        yamllint -c .yamllint -f github Supporting\ Resources/v2.0/Datamodel/Datafiles

  generate-markdown:
    runs-on: ubuntu-18.04
    needs: lintModelv20
    strategy:
      matrix:
        lang: [en, es, de]
    steps:
      - uses: actions/checkout@v2

      - name: 'Create output dir and copy files to override spaces in directories'
        run: |
          cp -r Supporting\ Resources/v2.0/Datamodel/Datafiles/${{ matrix.lang }} .
          mkdir output

      - name: 'Process datafiles for ${{ matrix.lang }}'
        uses: docker://fzipi/owasp-samm-preprocess-yaml:version-0.5.0
        with:
          args: '-d ${{ matrix.lang }} -o output'

      - name: 'Process artifacts for ${{ matrix.lang }}'
        run: |
          mkdir -p ${{ matrix.lang }}/business-function/practice/stream
          BASE=output/markdown
          cp "$BASE"/{Design.md,Governance.md,Implementation.md,Operations.md,Verification.md} ${{ matrix.lang }}/business-function
          cp "$BASE"/*-??-?.md ${{ matrix.lang }}/business-function/practice/stream
          cp "$BASE"/*-??.md ${{ matrix.lang }}/business-function/practice

      - name: 'Upload artifacts'
        uses: actions/upload-artifact@v1
        with:
          name: 'markdown-${{ matrix.lang }}'
          path: '${{ matrix.lang }}/business-function'

  build:
    runs-on: ubuntu-18.04
    needs: generate-markdown
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.59.1'
          extended: true

      - uses: actions/download-artifact@v2
        name: Download markdown-files for all langs

      - name: Deploy generated artifacs
        run: |
          for lang in en es de;
          do 
            mkdir -p Website/content/"${lang}"/business-function/
            cp -r markdown-"${lang}"/* Website/content/"${lang}"/business-function/
          done

      - name: Production build
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          hugo --gc --minify -v --cleanDestinationDir --environment production -s Website -d public

      - name: Staging build
        # Note: By default, a workflow only runs when a pull_request's activity type is opened, synchronize, or reopened
        if: github.ref != 'refs/heads/master'
        run: |
          hugo --gc --minify -v --cleanDestinationDir --environment staging -s Website -d public

      - name: 'Upload hugo artifacts'
        uses: actions/upload-artifact@v1
        with:
          name: webpage
          path: Website/public

  deploy:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/download-artifact@v1
        name: Download website files
        with:
          name: webpage

      - name: 'Deploy to Netlify'
        # Note: By default, a workflow only runs when a pull_request's activity type is opened, synchronize, or reopened
        uses: fzipi/netlify-actions/cli@master
        id: netlifydeploy
        with:
          args: deploy --dir webpage
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: 'Add netlify url to pull'
        if: github.event_name == 'pull_request' && contains(steps.netlifydeploy.outputs.NETLIFY_URL, 'netlify.app')
        uses: actions/github-script@0.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            github.issues.createComment({ issue_number, owner, repo, body: 'See SAMM website preview here: ${{steps.netlifydeploy.outputs.NETLIFY_URL}}' });

      - name: 'Deploy to Github'
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v2.5.0
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: webpage/